{
    "$schema": "https://raw.githubusercontent.com/wraith13/evil-type.ts/master/generated/schema/type.json#",
    "imports": [
        {
            "import": "{ EvilType }",
            "from": "../evil-type.ts/common/evil-type"
        }
    ],
    "defines": {
        "Type": {
            "type": "namespace",
            "members": {
                "FlounderType": {
                    "type": "type",
                    "define": {
                        "type": "memberof",
                        "value": {
                            "$ref": "Arguments"
                        },
                        "key": "type"
                    }
                },
                "LayoutAngle": {
                    "type": "type",
                    "define": {
                        "type": "enum-type",
                        "members": [
                            "regular",
                            "alternative"
                        ]
                    }
                },
                "_H": {
                    "type": "type",
                    "export": false,
                    "validator": false,
                    "define": {
                        "type": "enum-type",
                        "members": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9",
                            "A",
                            "B",
                            "C",
                            "D",
                            "E",
                            "F",
                            "a",
                            "b",
                            "c",
                            "d",
                            "e",
                            "f"
                        ]
                    }
                },
                "_H2": {
                    "type": "type",
                    "export": false,
                    "validator": false,
                    "define": {
                        "type": "string",
                        "pattern": "^#(?:[0-9A-Fa-f]){3}$",
                        "tsPattern": [
                            "${ _H }${ _H }"
                        ]
                    }
                },
                "_H3": {
                    "type": "type",
                    "export": false,
                    "validator": false,
                    "define": {
                        "type": "string",
                        "pattern": "^#(?:[0-9A-Fa-f]){3}$",
                        "tsPattern": [
                            "${ _H }${ _H }${ _H }"
                        ]
                    }
                },
                "_H4": {
                    "type": "type",
                    "export": false,
                    "validator": false,
                    "define": {
                        "type": "string",
                        "pattern": "^#(?:[0-9A-Fa-f]){3}$",
                        "tsPattern": [
                            "${ _H2 }${ _H2 }"
                        ]
                    }
                },
                "_H3C": {
                    "type": "type",
                    "export": false,
                    "validator": false,
                    "define": {
                        "type": "string",
                        "pattern": "^#(?:[0-9A-Fa-f]){3}$",
                        "tsPattern": [
                            "#${ _H3 }"
                        ]
                    }
                },
                "_H4C": {
                    "type": "type",
                    "export": false,
                    "validator": false,
                    "define": {
                        "type": "string",
                        "pattern": "^#(?:[0-9A-Fa-f]){4}$",
                        "tsPattern": [
                            "#${ _H4 }"
                        ]
                    }
                },
                "_H6C": {
                    "type": "type",
                    "export": false,
                    "validator": false,
                    "define": {
                        "type": "string",
                        "pattern": "^#(?:[0-9A-Fa-f]){6}$",
                        "tsPattern": [
                            "#${ _H3 }${ _H3 }"
                        ]
                    }
                },
                "_H8C": {
                    "type": "type",
                    "export": false,
                    "validator": false,
                    "define": {
                        "type": "string",
                        "pattern": "^#(?:[0-9A-Fa-f]){8}$",
                        "tsPattern": [
                            "#${ _H4 }${ _H4 }"
                        ]
                    }
                },
                "HexColor": {
                    "type": "type",
                    "define": {
                        "type": "string",
                        "pattern": "^#(?:[0-9A-Fa-f]){3,4,6,8}$",
                        "tsPattern": [
                            "${ _H3C | _H4C | _H6C | _H8C }"
                        ]
                    }
                },
                "NamedColor": {
                    "type": "type",
                    "define": {
                        "type": "enum-type",
                        "members": [
                            "black",
                            "silver",
                            "gray",
                            "white",
                            "maroon",
                            "red",
                            "purple",
                            "fuchsia",
                            "green",
                            "lime",
                            "olive",
                            "yellow",
                            "navy",
                            "blue",
                            "teal",
                            "aqua",
                            "aliceblue",
                            "antiquewhite",
                            "aqua",
                            "aquamarine",
                            "azure",
                            "beige",
                            "bisque",
                            "black",
                            "blanchedalmond",
                            "blue",
                            "blueviolet",
                            "brown",
                            "burlywood",
                            "cadetblue",
                            "chartreuse",
                            "chocolate",
                            "coral",
                            "cornflowerblue",
                            "cornsilk",
                            "crimson",
                            "cyan",
                            "darkblue",
                            "darkcyan",
                            "darkgoldenrod",
                            "darkgray",
                            "darkgreen",
                            "darkgrey",
                            "darkkhaki",
                            "darkmagenta",
                            "darkolivegreen",
                            "darkorange",
                            "darkorchid",
                            "darkred",
                            "darksalmon",
                            "darkseagreen",
                            "darkslateblue",
                            "darkslategray",
                            "darkslategrey",
                            "darkturquoise",
                            "darkviolet",
                            "deeppink",
                            "deepskyblue",
                            "dimgray",
                            "dimgrey",
                            "dodgerblue",
                            "firebrick",
                            "floralwhite",
                            "forestgreen",
                            "fuchsia",
                            "gainsboro",
                            "ghostwhite",
                            "gold",
                            "goldenrod",
                            "gray",
                            "green",
                            "greenyellow",
                            "grey",
                            "honeydew",
                            "hotpink",
                            "indianred",
                            "indigo",
                            "ivory",
                            "khaki",
                            "lavender",
                            "lavenderblush",
                            "lawngreen",
                            "lemonchiffon",
                            "lightblue",
                            "lightcoral",
                            "lightcyan",
                            "lightgoldenrodyellow",
                            "lightgray",
                            "lightgreen",
                            "lightgrey",
                            "lightpink",
                            "lightsalmon",
                            "lightseagreen",
                            "lightskyblue",
                            "lightslategray",
                            "lightslategrey",
                            "lightsteelblue",
                            "lightyellow",
                            "lime",
                            "limegreen",
                            "linen",
                            "magenta",
                            "maroon",
                            "mediumaquamarine",
                            "mediumblue",
                            "mediumorchid",
                            "mediumpurple",
                            "mediumseagreen",
                            "mediumslateblue",
                            "mediumspringgreen",
                            "mediumturquoise",
                            "mediumvioletred",
                            "midnightblue",
                            "mintcream",
                            "mistyrose",
                            "moccasin",
                            "navajowhite",
                            "navy",
                            "oldlace",
                            "olive",
                            "olivedrab",
                            "orange",
                            "orangered",
                            "orchid",
                            "palegoldenrod",
                            "palegreen",
                            "paleturquoise",
                            "palevioletred",
                            "papayawhip",
                            "peachpuff",
                            "peru",
                            "pink",
                            "plum",
                            "powderblue",
                            "purple",
                            "rebeccapurple",
                            "red",
                            "rosybrown",
                            "royalblue",
                            "saddlebrown",
                            "salmon",
                            "sandybrown",
                            "seagreen",
                            "seashell",
                            "sienna",
                            "silver",
                            "skyblue",
                            "slateblue",
                            "slategray",
                            "slategrey",
                            "snow",
                            "springgreen",
                            "steelblue",
                            "tan",
                            "teal",
                            "thistle",
                            "tomato",
                            "transparent",
                            "turquoise",
                            "violet",
                            "wheat",
                            "white",
                            "whitesmoke",
                            "yellow",
                            "yellowgreen"
                        ]
                    }
                },
                "Color": {
                    "type": "type",
                    "define": {
                        "type": "or",
                        "types": [
                            {
                                "$ref": "HexColor"
                            },
                            {
                                "$ref": "NamedColor"
                            }
                        ]
                    }
                },
                "Rate": {
                    "type": "type",
                    "define": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1.0
                    }
                },
                "SignedRate": {
                    "type": "type",
                    "define": {
                        "type": "number",
                        "minimum": -1.0,
                        "maximum": 1.0
                    }
                },
                "Pixel": {
                    "type": "type",
                    "define": {
                        "type": "number",
                        "minimum": 0
                    }
                },
                "SignedPixel": {
                    "type": "type",
                    "define": {
                        "type": "number"
                    }
                },
                "Count": {
                    "type": "type",
                    "define": {
                        "type": "integer",
                        "minimum": 0
                    }
                },
                "ArgumentsBase": {
                    "type": "interface",
                    "members": {
                        "type": {
                            "$ref": "FlounderType"
                        },
                        "layoutAngle?": {
                            "type": "or",
                            "types": [
                                {
                                    "$ref": "LayoutAngle"
                                },
                                {
                                    "$ref": "SignedRate"
                                }
                            ]
                        },
                        "offsetX?": {
                            "$ref": "SignedPixel"
                        },
                        "offsetY?": {
                            "$ref": "SignedPixel"
                        },
                        "foregroundColor": {
                            "$ref": "Color"
                        },
                        "backgroundColor?": {
                            "$ref": "Color"
                        },
                        "intervalSize?": {
                            "$ref": "Pixel"
                        },
                        "depth": {
                            "$ref": "Rate"
                        },
                        "blur?": {
                            "$ref": "Pixel"
                        },
                        "maxPatternSize?": {
                            "$ref": "Pixel"
                        },
                        "reverseRate?": {
                            "type": "or",
                            "types": [
                                {
                                    "$ref": "SignedRate"
                                },
                                {
                                    "const": "auto"
                                },
                                {
                                    "const": "-auto"
                                }
                            ]
                        },
                        "anglePerDepth?": {
                            "type": "or",
                            "types": [
                                {
                                    "$ref": "SignedRate"
                                },
                                {
                                    "const": "auto"
                                },
                                {
                                    "const": "-auto"
                                }
                            ]
                        },
                        "maximumFractionDigits?": {
                            "$ref": "Count"
                        }
                    }
                },
                "SpotArguments": {
                    "type": "interface",
                    "extends": [
                        {
                            "$ref": "ArgumentsBase"
                        }
                    ],
                    "members": {
                        "type": {
                            "type": "enum-type",
                            "members": [
                                "trispot",
                                "tetraspot"
                            ]
                        },
                        "layoutAngle?": {
                            "type": "or",
                            "types": [
                                {
                                    "$ref": "LayoutAngle"
                                },
                                {
                                    "const": 0
                                }
                            ]
                        },
                        "anglePerDepth?": {
                            "type": "or",
                            "types": [
                                {
                                    "type": "never"
                                },
                                {
                                    "const": 0
                                }
                            ]
                        }
                    }
                },
                "LineArguments": {
                    "type": "interface",
                    "extends": [
                        {
                            "$ref": "ArgumentsBase"
                        }
                    ],
                    "members": {
                        "type": {
                            "type": "enum-type",
                            "members": [
                                "stripe",
                                "diline",
                                "triline"
                            ]
                        }
                    }
                },
                "Arguments": {
                    "type": "type",
                    "define": {
                        "type": "or",
                        "types": [
                            {
                                "$ref": "SpotArguments"
                            },
                            {
                                "$ref": "LineArguments"
                            }
                        ]
                    }
                }
            }
        }
    },
    "options": {
        "outputFile": "../generated/type.ts",
        "indentUnit": 4,
        "indentStyle": "allman",
        "validatorOption": "full",
        "default": {
            "export": true,
            "additionalProperties": false
        },
        "schema": {
            "outputFile": "../generated/schema.json",
            "$id": "https://raw.githubusercontent.com/wraith13/flounder.style.js/master/generated/schema.json#",
            "$ref": "Type.Arguments"
        }
    }
}